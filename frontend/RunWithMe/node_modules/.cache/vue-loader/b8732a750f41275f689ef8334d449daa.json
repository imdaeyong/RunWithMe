{"remainingRequest":"C:\\Users\\multicampus\\Desktop\\vue-main\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\multicampus\\Desktop\\vue-main\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\multicampus\\Desktop\\vue-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\multicampus\\Desktop\\vue-main\\src\\containers\\layouts\\largeSidebar\\Sidebar.vue?vue&type=template&id=1bf99b28&scoped=true&","dependencies":[{"path":"C:\\Users\\multicampus\\Desktop\\vue-main\\src\\containers\\layouts\\largeSidebar\\Sidebar.vue","mtime":1600674574000},{"path":"C:\\Users\\multicampus\\Desktop\\vue-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\vue-main\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\vue-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\vue-main\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}