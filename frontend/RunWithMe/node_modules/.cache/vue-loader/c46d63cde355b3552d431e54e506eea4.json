{"remainingRequest":"C:\\Users\\multicampus\\Desktop\\vue-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\multicampus\\Desktop\\vue-main\\src\\views\\app\\dashboards\\dashboard.v1.vue?vue&type=template&id=260f13a6&","dependencies":[{"path":"C:\\Users\\multicampus\\Desktop\\vue-main\\src\\views\\app\\dashboards\\dashboard.v1.vue","mtime":1600674574000},{"path":"C:\\Users\\multicampus\\Desktop\\vue-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\vue-main\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\vue-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\vue-main\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}